class WordGameObject extends GameObject {
    constructor(word, i, lowestSolutionLetter, game) {
        super(game);
        this.wordNumber = i;
        this.word = word.word;
        this.solutionLetter = word.solutionLetter;
        this.lowestSolutionLetter = lowestSolutionLetter;
        this.focus = 0;

        this.createWord(this.word, this.wordNumber);
    }

    createWord(word, wordNumber) {
        let letters = word.split('');
        this.object = $('<div>', {id: wordNumber, class: 'word'});
        this.object.on('click', () => {
            this.click();
        });
        this.gameObjects = [];

        for(let i = 0; i < this.solutionLetter - this.lowestSolutionLetter; i++) {
            let emptyHeader = $('<div>', {class: 'empty-letter-space'});
            this.object.append(emptyHeader);
        }
        for(let i in letters) {
            let letter = letters[i];
            if(letter == ' ') {
                        
            }
            else {
                this.gameObjects.push(new LetterGameObject(letter, i, this.object, this.getGame()));
            }
        }

        this.getGame().crossword.append(this.object);
    }

    setFocus(letterNumber) {
        this.focus = letterNumber;
    }

    click() {
        this.getGame().setFocus(this.wordNumber);
    }

    insertLetter(letter) {
        if(this.gameObjects[this.focus].insertLetter(letter)) {
            if(this.focus === this.gameObjects.length - 1) {
                return 'next'
            }
            this.focus++;
        }
    }
}
